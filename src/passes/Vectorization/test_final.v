// Generated by CIRCT unknown git version
module linear(	// test.cleaned.mlir:2:3
  input  [3:0] in,	// test.cleaned.mlir:2:24
  output [3:0] out	// test.cleaned.mlir:2:38
);

  assign out = in;	// test.cleaned.mlir:3:5
endmodule

module reverse(	// test.cleaned.mlir:5:3
  input  [3:0] in,	// test.cleaned.mlir:5:25
  output [3:0] out	// test.cleaned.mlir:5:39
);

  assign out = {in[0], in[1], in[2], in[3]};	// test.cleaned.mlir:6:10, :7:10, :8:10, :9:10, :10:10, :11:5
endmodule

module mix_bit(	// test.cleaned.mlir:13:3
  input  [3:0] in,	// test.cleaned.mlir:13:25
  output [3:0] out	// test.cleaned.mlir:13:39
);

  assign out = {in[0], in[3:1]};	// test.cleaned.mlir:14:10, :15:10, :16:10, :17:5
endmodule

module mix_bit2(	// test.cleaned.mlir:19:3
  input  [7:0] in,	// test.cleaned.mlir:19:26
  output [7:0] out	// test.cleaned.mlir:19:40
);

  assign out = {in[7:6], in[4], in[5], in[0], in[3:1]};	// test.cleaned.mlir:20:10, :21:10, :22:10, :23:10, :24:10, :25:10, :26:5
endmodule

module test_mux(	// test.cleaned.mlir:28:3
  input  [3:0] a,	// test.cleaned.mlir:28:26
               b,	// test.cleaned.mlir:28:38
  input        sel,	// test.cleaned.mlir:28:50
  output [3:0] result	// test.cleaned.mlir:28:65
);

  wire [3:0] _GEN;	// test.cleaned.mlir:33:10
  wire [3:0] _GEN_0;	// test.cleaned.mlir:31:10
  assign _GEN_0 = {4{sel}};	// test.cleaned.mlir:31:10
  assign _GEN = {4{sel}};	// test.cleaned.mlir:33:10
  assign result = a & _GEN_0 | b & ~_GEN;	// test.cleaned.mlir:30:10, :31:10, :32:10, :33:10, :34:10, :35:10, :36:5
endmodule

module test_and_enable(	// test.cleaned.mlir:38:3
  input  [3:0] a,	// test.cleaned.mlir:38:33
  input        enable,	// test.cleaned.mlir:38:45
  output [3:0] o	// test.cleaned.mlir:38:63
);

  wire [3:0] _GEN;	// test.cleaned.mlir:40:10
  assign _GEN = {4{enable}};	// test.cleaned.mlir:40:10
  assign o = a & _GEN;	// test.cleaned.mlir:39:10, :40:10, :41:5
endmodule

module test_multiple_patterns(	// test.cleaned.mlir:43:3
  input  [3:0] a,	// test.cleaned.mlir:43:40
               b,	// test.cleaned.mlir:43:52
               c,	// test.cleaned.mlir:43:64
  output [3:0] out_xor,	// test.cleaned.mlir:43:77
               out_and	// test.cleaned.mlir:43:95
);

  assign out_xor = a ^ b;	// test.cleaned.mlir:44:10, :46:5
  assign out_and = a & c;	// test.cleaned.mlir:45:10, :46:5
endmodule

module test_add(	// test.cleaned.mlir:48:3
  input  [3:0] a,	// test.cleaned.mlir:48:26
               b,	// test.cleaned.mlir:48:38
  output [3:0] o	// test.cleaned.mlir:48:51
);

  assign o = a + b;	// test.cleaned.mlir:49:10, :50:5
endmodule

module CustomLogic(	// test.cleaned.mlir:52:3
  input  [7:0] a,	// test.cleaned.mlir:52:29
               b,	// test.cleaned.mlir:52:41
  output [7:0] out	// test.cleaned.mlir:52:54
);

  assign out = a & b | ~a;	// test.cleaned.mlir:54:10, :55:10, :56:10, :57:5
endmodule

module GatedXOR(	// test.cleaned.mlir:59:3
  input  [3:0] a,	// test.cleaned.mlir:59:26
               b,	// test.cleaned.mlir:59:38
  input        enable,	// test.cleaned.mlir:59:50
  output [3:0] out	// test.cleaned.mlir:59:68
);

  wire [3:0] _GEN;	// test.cleaned.mlir:62:10
  assign _GEN = {4{enable}};	// test.cleaned.mlir:62:10
  assign out = (a ^ b) & _GEN;	// test.cleaned.mlir:60:10, :61:10, :62:10, :63:5
endmodule

